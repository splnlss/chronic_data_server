{"version":3,"sources":["../node_modules/pdfjs-dist/build sync","images/logo.svg","config.js","auth/actions/utils.js","auth/actions/protected-data.js","containers/dashboard/dashboard.js","auth/components/requires-login.js","local-storage.js","auth/actions/auth.js","components/common/header/header.js","auth/components/input.js","validators.js","auth/components/login-form.js","containers/landingpage/landing-page.js","components/documents/action/utils.js","components/documents/components/input.js","components/documents/components/document-form.js","components/vitals/vitals.js","components/documentViewer/action/fetch-documents.js","components/documentViewer/components/card.js","components/documentViewer/components/documentList.js","components/documentViewer/components/documentViewer.js","components/documents/components/document-edit.js","components/documents/action/edit-document.js","containers/contact/contact.js","auth/components/registration-form.js","auth/actions/users.js","auth/components/registration-page.js","components/documentViewer/components/pdfViewer.js","app.js","auth/reducers/auth.js","components/documentViewer/reducer/documentReducer.js","auth/reducers/protected-data.js","store.js","registerServiceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","__webpack_require__","p","API_BASE_URL","process","REACT_APP_API_BASE_URL","AWS_BASE_URL","normalizeResponseErrors","res","ok","headers","has","get","startsWith","json","then","err","Promise","reject","status","message","statusText","FETCH_PROTECTED_DATA_SUCCESS","FETCH_PROTECTED_DATA_ERROR","fetchProtectedData","dispatch","getState","authToken","auth","fetch","concat","method","Authorization","_ref","data","type","fetchProtectedDataSuccess","catch","error","Dashboard","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","props","userNameUpperCase","username","toUpperCase","react_default","a","createElement","BrowserRouter","className","React","Component","requiresLogin","RequiresLogin","authenticating","loggedIn","passThroughProps","objectWithoutProperties","Redirect","to","displayName","name","connect","state","loading","currentUser","firstName","lastName","protectedData","clearAuthToken","localStorage","removeItem","SET_AUTH_TOKEN","setAuthToken","CLEAR_AUTH","clearAuth","AUTH_REQUEST","authRequest","AUTH_SUCCESS","AUTH_ERROR","authError","storeAuthInfo","decodedToken","jwtDecode","user","setItem","saveAuthToken","login","password","Content-Type","body","JSON","stringify","SubmissionError","_error","Header","headerMenu","_this","Link","href","onClick","logOut","src","logo","alt","height","Input","prevProps","meta","active","input","focus","warning","touched","htmlFor","label","assign","ref","required","undefined","nonEmpty","trim","isTrimmed","LoginForm","values","aria-live","Form","onSubmit","handleSubmit","Field","component","placeholder","validate","Button","disabled","pristine","submitting","reduxForm","form","onSubmitFail","errors","login_form","style","DocumentForm","call","goBack","history","fileInputEl","createRef","_this2","documentName","notes","healthProviderName","documentFile","formData","FormData","imagefile","current","files","append","console","log","axios","post","results","push","_React$createElement","_this3","defineProperty","Vitals","event","preventDefault","SET_DOCUMENTS","card","length","field","backgroundColor","padding","margin","borderRadius","provider","DocumentList","_getPrototypeOf2","_len","args","Array","_key","fetchDocuments","documents","map","document","components_card","content-type","payload","reason","location","DocumentViewer","deleteHandler","match","params","responses","_this$props","find","doc","setState","_this$props2","documentURL","slice","lastIndexOf","width","window","confirm","withRouter","DocumentEdit","documentUpload","put","editDocument","ownProps","initialValues","Contact","passwordLength","min","max","matchesPassword","allValues","RegistrationForm","registerUser","registration_form","pdfjs","GlobalWorkerOptions","workerSrc","version","PDFViewer","numPages","pageNumber","onDocumentLoadSuccess","_this$state","imgUrl","url","entry","file","onLoadSuccess","App","header_header","Switch","Route","exact","path","LandingPage","DocumentsForm","RegistrationPage","initialState","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","formReducer","action","applyMiddleware","thunk","getItem","token","_ref2","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","render","es","app","getElementById","URL","origin","addEventListener","response","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.cdfd9da8.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 132;","module.exports = __webpack_public_path__ + \"static/media/logo.d50f1fad.svg\";","export const API_BASE_URL =\n    process.env.REACT_APP_API_BASE_URL || 'http://localhost:8080/api';\n\nexport const AWS_BASE_URL = 'https://chronicdata-records.s3.us-east-2.amazonaws.com/';","// Boilerplate code for handling errors from the API.  If the error response\n// contains JSON then we return a rejected promise containing the decoded\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\n// containing the status text.  If there is no error then we continue with\n// the promise chain.\nexport const normalizeResponseErrors = res => {\n    if (!res.ok) {\n        if (\n            res.headers.has('content-type') &&\n            res.headers.get('content-type').startsWith('application/json')\n        ) {\n            // It's a nice JSON error returned by us, so decode it\n            return res.json().then(err => Promise.reject(err));\n        }\n        // It's a less informative error returned by express\n        return Promise.reject({\n            code: res.status,\n            message: res.statusText\n        });\n    }\n    return res;\n};\n","import {API_BASE_URL} from '../../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const FETCH_PROTECTED_DATA_SUCCESS = 'FETCH_PROTECTED_DATA_SUCCESS';\nexport const fetchProtectedDataSuccess = data => ({\n    type: FETCH_PROTECTED_DATA_SUCCESS,\n    data\n});\n\nexport const FETCH_PROTECTED_DATA_ERROR = 'FETCH_PROTECTED_DATA_ERROR';\nexport const fetchProtectedDataError = error => ({\n    type: FETCH_PROTECTED_DATA_ERROR,\n    error\n});\n\nexport const fetchProtectedData = () => (dispatch, getState) => {\n    const authToken = getState().auth.authToken;\n    return fetch(`${API_BASE_URL}/protected`, {\n        method: 'GET',\n        headers: {\n            // Provide our auth token as credentials\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(({data}) => dispatch(fetchProtectedDataSuccess(data)))\n        .catch(err => {\n            dispatch(fetchProtectedDataError(err));\n        });\n};\n","import React, { Component } from 'react';\nimport {BrowserRouter as Router, Route, Link, Switch} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport requiresLogin from '../../auth/components/requires-login';\nimport {fetchProtectedData} from '../../auth/actions/protected-data';\nimport './dashboard.css';\n\nexport class Dashboard extends React.Component {\n  componentDidMount() {\n        this.props.dispatch(fetchProtectedData());\n    }\n\n  render() {\n    let userNameUpperCase = this.props.username.toUpperCase()\n    return (\n      <Router>\n        <div className=\"dashboard\">\n            <main>\n              <div>\n                <h2>WELCOME {userNameUpperCase}!</h2>\n                <p>To add documents select documents button from toolbar above.</p>\n              </div>\n            </main>\n        </div>\n      </Router>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n    const {currentUser} = state.auth;\n    return {\n        username: state.auth.currentUser.username,\n        name: `${currentUser.firstName} ${currentUser.lastName}`,\n        protectedData: state.protectedData.data\n    };\n};\n\nexport default requiresLogin()(connect(mapStateToProps)(Dashboard));\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Redirect} from 'react-router-dom';\n\nexport default () => Component => {\n    function RequiresLogin(props) {\n        const {authenticating, loggedIn, error, ...passThroughProps} = props;\n        if (authenticating) {\n            return <div>Logging in...</div>;\n        } else if (!loggedIn || error) {\n            return <Redirect to=\"/\" />;\n        }\n\n        return <Component {...passThroughProps} />;\n    }\n\n    const displayName = Component.displayName || Component.name || 'Component';\n    RequiresLogin.displayName = `RequiresLogin(${displayName})`;\n\n    const mapStateToProps = (state, props) => ({\n        authenticating: state.auth.loading,\n        loggedIn: state.auth.currentUser !== null,\n        error: state.auth.error\n    });\n\n    return connect(mapStateToProps)(RequiresLogin);\n};\n","export const loadAuthToken = () => {\n    return localStorage.getItem('authToken');\n};\n\nexport const saveAuthToken = authToken => {\n    try {\n        localStorage.setItem('authToken', authToken);\n    } catch (e) {}\n};\n\nexport const clearAuthToken = () => {\n    try {\n        localStorage.removeItem('authToken');\n    } catch (e) {}\n};\n","import jwtDecode from 'jwt-decode';\nimport {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../../config';\nimport {normalizeResponseErrors} from './utils';\nimport {saveAuthToken, clearAuthToken} from '../../local-storage';\n\nexport const SET_AUTH_TOKEN = 'SET_AUTH_TOKEN';\nexport const setAuthToken = authToken => ({\n    type: SET_AUTH_TOKEN,\n    authToken\n});\n\nexport const CLEAR_AUTH = 'CLEAR_AUTH';\nexport const clearAuth = () => ({\n    type: CLEAR_AUTH\n});\n\nexport const AUTH_REQUEST = 'AUTH_REQUEST';\nexport const authRequest = () => ({\n    type: AUTH_REQUEST\n});\n\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const authSuccess = currentUser => ({\n    type: AUTH_SUCCESS,\n    currentUser\n});\n\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const authError = error => ({\n    type: AUTH_ERROR,\n    error\n});\n\n// Stores the auth token in state and localStorage, and decodes and stores\n// the user data stored in the token\nconst storeAuthInfo = (authToken, dispatch) => {\n    const decodedToken = jwtDecode(authToken);\n    dispatch(setAuthToken(authToken));\n    dispatch(authSuccess(decodedToken.user));\n    saveAuthToken(authToken);\n};\n\nexport const login = (username, password) => dispatch => {\n    dispatch(authRequest());\n    return (\n        fetch(`${API_BASE_URL}/auth/login`, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                username,\n                password\n            })\n        })\n            // Reject any requests which don't return a 200 status, creating\n            // errors which follow a consistent format\n            .then(res => normalizeResponseErrors(res))\n            .then(res => res.json())\n            .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n            .catch(err => {\n                const {code} = err;\n                const message =\n                    code === 401\n                        ? 'Incorrect username or password'\n                        : 'Unable to login, please try again';\n                dispatch(authError(err));\n                // Could not authenticate, so return a SubmissionError for Redux\n                // Form\n                return Promise.reject(\n                    new SubmissionError({\n                        _error: message\n                    })\n                );\n            })\n    );\n};\n\nexport const refreshAuthToken = () => (dispatch, getState) => {\n    dispatch(authRequest());\n    const authToken = getState().auth.authToken;\n    return fetch(`${API_BASE_URL}/auth/refresh`, {\n        method: 'POST',\n        headers: {\n            // Provide our existing token as credentials to get a new one\n            Authorization: `Bearer ${authToken}`\n        }\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .then(({authToken}) => storeAuthInfo(authToken, dispatch))\n        .catch(err => {\n            // We couldn't get a refresh token because our current credentials\n            // are invalid or expired, or something else went wrong, so clear\n            // them and sign us out\n            dispatch(authError(err));\n            dispatch(clearAuth());\n            clearAuthToken(authToken);\n        });\n};\n","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport './../../../containers/dashboard/dashboard'\nimport './header.css'\nimport logo from '../../../images/logo.svg';\nimport {connect} from 'react-redux';\nimport {clearAuth} from '../../../auth/actions/auth';\nimport {clearAuthToken} from '../../../local-storage';\n\nexport class Header extends React.Component {\n  logOut() {\n      this.props.dispatch(clearAuth());\n      clearAuthToken();\n  }\n\n  render(){\n    let headerMenu;\n\n    if (this.props.loggedIn){\n        headerMenu =(\n          <div>\n            <li><Link to=\"/Dashboard/SubmitDocument\">+ Add Document</Link></li>\n            <li><Link to=\"/Dashboard/Documents\">+ Documents</Link></li>\n            <li><Link to=\"/Dashboard/Vitals\">+ Add Vitals</Link></li>\n            <li><Link to=\"/Dashboard/Contact\">+ Contact</Link></li>\n            <li><a href=\"#\" onClick={() => this.logOut()}>+ Log out</a></li>\n          </div>\n        );\n    }\n\n    // if (!this.props.loggedIn){\n    //     headerMenu =(\n    //           <li><a href=\"#\" onClick={() => this.logOut()}>+ Log In</a></li>\n    //       )\n    //     }\n\n  return (\n    <div>\n      <header className=\"header\">\n        <Link to=\"/\"><img src={logo} className=\"logo\" alt=\"Chronic Data Logo\" height=\"120\"/></Link>\n        <div className=\"title\">\n          <h1 className=\"header-title\"><Link to=\"/\">CHRONIC DATA SOCIETY</Link></h1>\n          <p className=\"header-intro\"> your data. your control. </p>\n        </div>\n        <nav>\n          <ul className=\"header-links\">\n            {headerMenu}\n          </ul>\n        </nav>\n      </header>\n    </div>\n    )\n  }\n}\n\nconst mapStateToProps = state => ({\n      loggedIn: state.auth.currentUser !== null\n  });\n\nexport default connect(mapStateToProps)(Header);\n","import React from 'react';\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <input\n                    {...this.props.input}\n                    id={this.props.input.name}\n                    type={this.props.type}\n                    ref={input => (this.input = input)}\n                />\n            </div>\n        );\n    }\n}\n","export const required = value => (value ? undefined : 'Required');\nexport const nonEmpty = value =>\n    value.trim() !== '' ? undefined : 'Cannot be empty';\nexport const isTrimmed = value =>\n    value.trim() === value ? undefined : 'Cannot start or end with whitespace';\nexport const length = length => value => {\n    if (length.min && value.length < length.min) {\n        return `Must be at least ${length.min} characters long`;\n    }\n    if (length.max && value.length > length.max) {\n        return `Must be at most ${length.max} characters long`;\n    }\n};\nexport const matches = field => (value, allValues) =>\n    field in allValues && value.trim() === allValues[field].trim()\n        ? undefined\n        : 'Does not match';\n","import React from 'react';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport Input from './input';\nimport {login} from '../actions/auth';\nimport {required, nonEmpty} from '../../validators';\n\nimport {Button, Icon, Form} from 'semantic-ui-react';\n\nexport class LoginForm extends React.Component {\n    onSubmit(values) {\n        return this.props.dispatch(login(values.username, values.password));\n    }\n\n    render() {\n        let error;\n        if (this.props.error) {\n            error = (\n                <div className=\"form-error\" aria-live=\"polite\">\n                    {this.props.error}\n                </div>\n            );\n        }\n        return (\n            <Form\n                className=\"login-form ui\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                {error}\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    id=\"username\"\n                    placeholder=\"Username\"\n                    validate={[required, nonEmpty]}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    validate={[required, nonEmpty]}\n                />\n{/* \n                <a class=\"dropbox-btn\" href=\"http://localhost:8080/api/auth/dropbox\">Dropbox</a> */}\n\n                <Button disabled={this.props.pristine || this.props.submitting}>\n                    Log in\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'login',\n    onSubmitFail: (errors, dispatch) => dispatch(focus('login', 'username'))\n})(LoginForm);\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\nimport '../dashboard/dashboard.css';\nimport LoginForm from '../../auth/components/login-form';\n\n\nexport function LandingPage(props) {\n    // If we are logged in redirect straight to the user's dashboard\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n    let styles = {\n      \n    };\n\n    return (\n      <main>\n        <div className=\"home ui message\">\n            <h2>Welcome to Chronic Data</h2>\n            <LoginForm />\n            <Link to=\"/register\" style={styles}>Register</Link>\n        </div>\n      </main>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(LandingPage);\n","// Boilerplate code for handling errors from the API.  If the error response\n// contains JSON then we return a rejected promise containing the decoded\n// JSON.  If the error doesn't contain JSON then we return a rejected promise\n// containing the status text.  If there is no error then we continue with\n// the promise chain.\nexport const normalizeResponseErrors = res => {\n    if (!res.ok) {\n        if (\n            res.headers.has('content-type') &&\n            res.headers.get('content-type').startsWith('application/json')\n        ) {\n            // It's a nice JSON error returned by us, so decode it\n            return res.json().then(err => Promise.reject(err));\n        }\n        // It's a less informative error returned by express\n        return Promise.reject({\n            code: res.status,\n            message: res.statusText\n        });\n    }\n    return res;\n};\n","import React from 'react';\n\nexport default class Input extends React.Component {\n    componentDidUpdate(prevProps) {\n        if (!prevProps.meta.active && this.props.meta.active) {\n            this.input.focus();\n        }\n    }\n\n    render() {\n        let error;\n        if (this.props.meta.touched && this.props.meta.error) {\n            error = <div className=\"form-error\">{this.props.meta.error}</div>;\n        }\n        let warning;\n        if (this.props.meta.touched && this.props.meta.warning) {\n            warning = (\n                <div className=\"form-warning\">{this.props.meta.warning}</div>\n            );\n        }\n        return (\n            <div className=\"form-input\">\n                <label htmlFor={this.props.input.name}>\n                    {this.props.label}\n                    {error}\n                    {warning}\n                </label>\n                <input\n                    {...this.props.input}\n                    id={this.props.input.name}\n                    type={this.props.type}\n                    ref={input => (this.input = input)}\n                />\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport {Button, Form} from 'semantic-ui-react';\nimport {submitDocument} from '../action/submit-document';\nimport Input from './input';\nimport {API_BASE_URL} from '../../../config'\nimport axios from 'axios';\nimport {required, nonEmpty} from '../../../validators';\nimport './documents.css';\nimport '../../../containers/dashboard/dashboard';\n\nexport class DocumentForm extends React.Component {\n    constructor(props){\n      super(props);\n      this.fileInputEl = React.createRef();\n    }\n\n    goBack = () => this.props.history.goBack();\n\n    onSubmit(values) {\n      const {documentName, notes, healthProviderName, documentFile} = values;\n      const {username} = this.props.auth.currentUser;\n      let documentUpload = {documentName, notes, healthProviderName, username};\n      \n      //uploading imagefile to aws\n      let formData = new FormData();\n      const imagefile = this.fileInputEl.current.files[0];\n      formData.append(\"documentFile\", imagefile);\n      formData.append(\"documentName\", documentName);\n      formData.append(\"notes\", notes);\n      formData.append(\"healthProviderName\", healthProviderName);\n      formData.append(\"username\", username);\n      console.log(formData);\n\n      axios.post(`${API_BASE_URL}/documents`, formData, {\n          headers: {\n            'Content-Type': 'multipart/form-data'\n          }\n      })\n      .then((results)=>{\n        // console.log(results.data.imageUrl)\n        // documentUpload = {...documentUpload, documentURL:results.data.imageUrl}\n        // this.props.dispatch(submitDocument(documentUpload))\n        console.log(\"dispatch submitted\")\n        this.props.history.push('/Dashboard/Documents');\n       \n      })\n      .catch((err)=>{\n        console.log(err)\n      })\n    }\n    \n    render() {\n     \n      return (\n         <div className=\"document\">\n            <div onClick={this.goBack} className=\"close-button\">X</div>\n\n            <Form className=\"document-form\" onSubmit={this.props.handleSubmit(values =>\n              this.onSubmit(values)\n             )}>\n                <li>\n                <ul>\n                    <label htmlFor=\"documentName\">Document Name:</label>\n                    <Field\n                      component={Input}\n                      type=\"text\"\n                      name=\"documentName\"\n                      id=\"documentName\"\n                      validate={[required, nonEmpty]}\n                    />\n                  </ul>\n                  <ul>\n                    <label htmlFor=\"notes\">Notes:</label>\n                    <br></br>\n                    <Field\n                      component=\"textarea\" \n                      type=\"text\"\n                      name=\"notes\"\n                      id=\"notes\"\n                      validate={[]}\n                    />\n                  </ul>\n                  <ul>\n                    <label htmlFor=\"healthProviderName\">Health Provider:</label>\n                    <Field\n                      component={Input}\n                      type=\"text\"\n                      name=\"healthProviderName\"\n                      id=\"healthProviderName\"\n                      validate={[required, nonEmpty]}\n                    />\n                  </ul>\n                  <ul>\n                  <label htmlFor=\"documentFile\">Document:</label>\n                  <input \n                    ref={this.fileInputEl}\n                    id=\"documentFile\"  type=\"file\" name=\"documentFile\"/>\n                  </ul>\n                </li>\n                <Button disabled={this.props.pristine || this.props.submitting}>\n                    Add\n                </Button>\n                <Button type=\"button\" type=\"button\" onClick={ () => {\n                     this.props.history.push('/Dashboard/Documents');\n                 }}>Cancel</Button>\n            </Form>  \n          </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) =>{\n  return {auth:state.auth}\n}\n\nexport default reduxForm({\n  form: 'documentform',\n  onSubmitFail: (errors, dispatch) => dispatch(focus('documentName', 'healthProviderName'))\n})(connect(mapStateToProps)(DocumentForm));\n\n// export default requiresLogin()(connect(mapStateToProps)(Dashboard));\n","import React from 'react';\nimport './../../containers/dashboard/dashboard';\n\nexport default class Vitals extends React.Component {\n\n    onSubmit(event) {\n        event.preventDefault();\n    }\n    render() {\n    return (\n        <main>\n          <div className=\"form\">\n            <form className=\"card add-vitals\" onSubmit={e => this.onSubmit(e)}>\n                <li>\n                  <ul>\n                    <label>Blood Pressure:\n                        <input type=\"text\" name=\"bloodPressure\" />\n                    </label>\n                  </ul>\n                  <ul>\n                    <label>Heart Rate:\n                        <input type=\"text\" name=\"heartRate\" />\n                    </label>\n                  </ul>\n                  <ul>\n                    <label>Weight:\n                        <input type=\"text\" name=\"weight\" />\n                    </label>\n                  </ul>\n                </li>\n                <button>Add</button>\n                <button type=\"button\">\n                    Cancel\n                </button>\n            </form>\n          </div>\n        </main>\n        );\n    }\n}\n","import {API_BASE_URL} from '../../../config';\n// import {normalizeResponseErrors} from './utils';\n\nexport const SET_DOCUMENTS = 'SET_DOCUMENTS';\nexport const fetchDocuments = () => (dispatch) => {\n\n    //  dispatch({type:\"START_CALL\"})\n    console.log('START fetch')\n    fetch(`${API_BASE_URL}/documents`, {\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json'\n      },\n      body: JSON.stringify()\n    })\n    //   .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(data => {\n        console.log('DATA:', data)\n        //  dispatch({type:\"END_CALL\"})\n        dispatch({type:SET_DOCUMENTS, payload: data})\n      })\n      .catch(err => {\n          const {reason, message, location} = err;\n         \n        })\n}\n\n// export const SET_DOCUMENT = 'SET_DOCUMENT';\n// export const fetchDocument = () => (DocumentID) => {\n\n//     console.log('START fetch')\n//     fetch(`${API_BASE_URL}/documents/${DocumentID}`, {\n//         method: 'GET',\n//         headers: {\n//             'content-type': 'application/json'\n//       },\n//       body: JSON.stringify()\n//     })\n//     .then(res => res.json())\n//     .then(data => {\n//         dispatch({type:SET_DOCUMENT, payload: data})\n//       })\n//     .catch(err => {\n//           const {reason, message, location} = err;\n         \n//         })\n// }\n\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nfunction card(props){\n  const style ={\n    backgroundColor: \"white\",\n    padding: '2px 2px 2px 8px',\n    margin: '4px',\n    borderRadius: '4px'\n    // border: '1px solid lightgrey'\n  }\n\n  return (\n    <div key={props.id} style={style}>\n        <li><h3><Link to={`/documents/${props.id}`}>{props.name.toUpperCase()}</Link></h3>\n         {props.provider}\n        </li>\n    </div>\n\n  )\n}\n\nexport default card;","import React from 'react';\nimport {connect} from 'react-redux'\nimport '../../../containers/dashboard/dashboard';\nimport { fetchDocuments } from '../action/fetch-documents';\nimport { Link } from 'react-router-dom';\nimport Card from './card';\n\nexport class DocumentList extends React.Component {\n\n  componentDidMount(){\n    this.props.fetchDocuments();\n  }\n  \n  goBack = () => this.props.history.goBack();\n\n  render(){\n    const { documents } = this.props;\n    return (\n      <div className=\"document\">\n        <div onClick={this.goBack} className=\"close-button\">X</div>\n        <h2>Documents</h2>\n        <ul>\n        { documents && documents.map(document => (\n          <Card id={document.id} name={document.documentName} provider={document.healthProviderName}></Card>\n        ))}\n        </ul>\n      </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {auth:state.auth, documents: state.documents}\n}\nconst mapDispatchToProps = (dispatch) => {\n  return {fetchDocuments: () => { // this.props.fetchDocuments\n    dispatch(fetchDocuments())\n  }}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DocumentList)\n\n","import React from 'react';\nimport {connect} from 'react-redux'\nimport {withRouter} from 'react-router-dom';\nimport {Button, Icon, Form} from 'semantic-ui-react';\nimport './documentViewer.css';\n\nimport '../../../containers/dashboard/dashboard';\nimport {API_BASE_URL} from '../../../config';\n\nimport { Link } from 'react-router-dom'\nimport { Dashboard } from '../../../containers/dashboard/dashboard';\n\nexport class DocumentViewer extends React.Component {\n  state = {document:null}\n\n  componentDidMount(){\n  const { documents, match } = this.props;\n  const document = documents.find( doc => doc.id === match.params.id );\n  if(!document){\n    fetch(`${API_BASE_URL}/documents/${match.params.id}`, {\n        method: 'GET',\n        headers: {\n            'content-type': 'application/json'\n      },\n      body: JSON.stringify()\n      })\n    //   .then(res => normalizeResponseErrors(res))\n    .then(res => res.json())\n    .then(document => {\n        this.setState({document:document})\n      })\n      .catch(err => {\n          const {reason, message, location} = err;\n        \n        })\n    }\n  }\n\n  deleteHandler = () => {\n    const { match } = this.props;\n    fetch(`${API_BASE_URL}/documents/${match.params.id}`, {\n      method: 'Delete',\n      headers: {\n          'content-type': 'application/json'\n    },\n    body: JSON.stringify()\n    })\n    .then(responses  => {\n      console.log(\"delete:\" + responses)\n    })\n    .then(()=>{\n      this.props.history.push('/Dashboard/Documents');\n    })\n  }\n\n  goBack = () => this.props.history.goBack();\n\n  render(){\n  \n    let {document} = this.state;\n    const {documents, match} = this.props;\n    if(!document){\n      document = documents.find( doc => doc.id === match.params.id );\n    }\n    return (\n      <div>\n          <div className=\"document\">\n            <div onClick={this.goBack} className=\"close-button\">X</div>\n            <div className=\"documentInfo\">\n            <h3>{document ? document.documentName.toUpperCase() : ''}</h3>\n            {document ? \n                <div>\n                  <p>Health Provider: {document.healthProviderName}</p>\n                  <p>Notes: {document.notes}</p>\n                  <p>Document: </p>\n                  <br></br>\n                  {document.documentURL ? \n                    <Link to={`/image/${document.documentURL.slice((document.documentURL.lastIndexOf('/')+1))}`}><img src={document.documentURL} width=\"200\" height=\"auto\"></img></Link>\n                  : ''}\n                  <br/>\n                  {document.documentURL ? <a href={document.documentURL}>Download Original File</a> : ''}\n                  <div className=\"Edit\">\n                    <p>\n                      {/* <button onClick={this.editHandler(document.id)}>Edit</button> */}\n                      <Link to={`/documents/edit/${document.id}`} component=\"button\"><Button type=\"button\">Edit</Button></Link>\n                      <Button onClick={ () => {\n                         if(window.confirm('Are you sure you want to delete this document?')){\n                           this.deleteHandler()\n                          }}}>Delete</Button>\n                    </p> \n                  </div>\n                </div>\n              : ''}\n          </div>\n            </div>\n      </div>\n      )\n  }\n}\n\nconst mapStateToProps = (state) =>{\n  return {auth:state.auth, \n    documents: state.documents}\n}\n\nexport default withRouter(connect(mapStateToProps)(DocumentViewer))\n\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport {editDocument} from '../action/edit-document';\nimport {Button, Icon, Form} from 'semantic-ui-react';\nimport Input from './input';\nimport {Redirect} from 'react-router-dom'\nimport {API_BASE_URL} from '../../../config'\nimport axios from 'axios';\nimport {required, nonEmpty} from '../../../validators';\nimport './documents.css';\nimport '../../../containers/dashboard/dashboard';\n\nexport class DocumentEdit extends React.Component {\n  constructor(props){\n    super(props);\n    this.fileInputEl = React.createRef();\n  }\n\n  goBack = () => this.props.history.goBack();\n\n  onSubmit(values) {\n    const {documentName, notes, healthProviderName} = values;\n    const {username} = this.props.auth.currentUser;\n    const { id } = this.props.match.params;\n    const documentUpload = {documentName, notes, healthProviderName, username};\n\n    //uploading imagefile to aws\n    let formData = new FormData();\n    const imagefile = this.fileInputEl.current.files[0];\n    formData.append(\"documentFile\", imagefile);\n    formData.append(\"documentName\", documentName);\n    formData.append(\"notes\", notes);\n    formData.append(\"healthProviderName\", healthProviderName);\n    formData.append(\"username\", username);\n    console.log(formData);\n\n    axios.put(`${API_BASE_URL}/documents/${id}`, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n    })\n\n    return this.props\n        .dispatch(editDocument(id, documentUpload))\n        .then(()=>{\n          this.props.history.push('/Dashboard/Documents');\n        })\n  }\n\n  render() {\n    const { documents, document, match } = this.props;\n    if(!documents || !documents.length){\n      return <Redirect to=\"/Dashboard/Documents\" />;\n    }\n  return (\n        <div className=\"document\">\n          <div onClick={this.goBack} className=\"close-button\">X</div>\n          <Form className=\"document-form\" onSubmit={this.props.handleSubmit(values =>\n            this.onSubmit(values)\n          )}>\n            <li>\n            <ul>\n                <label htmlFor=\"documentName\">Document Name:</label>\n                <Field\n                  component={Input}\n                  type=\"text\"\n                  name=\"documentName\"\n                  id=\"documentName\"\n                  //value={document.documentName}\n                  validate={[required, nonEmpty]}\n                />\n              </ul>\n              <ul>\n                <label htmlFor=\"notes\">Notes:</label>\n                <br></br>\n                <Field\n                  component=\"textarea\"\n                  type=\"text\"\n                  name=\"notes\"\n                  id=\"notes\"\n                  //value={document.notes}\n                  validate={[]}\n                />\n              </ul>\n              <ul>\n                <label htmlFor=\"healthProviderName\">Health Provider:</label>\n                <Field\n                  component={Input}\n                  type=\"text\"\n                  name=\"healthProviderName\"\n                  id=\"healthProviderName\"\n                  //value={document.healthProviderName}\n                  validate={[required, nonEmpty]}\n                />\n              </ul>\n              <ul>\n                  <label htmlFor=\"documentFile\">Document: <a href={document.documentURL}>{document.documentURL}</a></label>\n                  <input \n                    ref={this.fileInputEl}\n                    id=\"documentFile\"  type=\"file\" name=\"documentFile\"/>\n                  </ul>\n            </li>\n            <Button disabled={this.props.pristine || this.props.submitting}>\n                Add\n            </Button>\n            <Button type=\"button\" onClick={ () => {\n                this.props.history.push('/Dashboard/Documents');\n            }}>Cancel</Button>\n        </Form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) =>{\n\n  const { match } = ownProps; // <- component props\n  const { documents } = state;\n\n  // console.log('mapStateToProps', { documents, match })\n  if(!documents || !documents.length){\n      return {};\n    }\n  const document =  documents.find( doc => doc.id === match.params.id );\n  return {\n    documents:state.documents,\n    auth:state.auth,\n    initialValues: document,\n    document\n  }\n}\n\nexport default connect(mapStateToProps)(reduxForm({\n  form: 'documentform',\n  onSubmitFail: (errors, dispatch) => dispatch(focus('documentName', 'healthProviderName'))\n})(DocumentEdit))\n\n\n\n\n// export default reduxForm({\n//   form: 'documentform',\n//   onSubmitFail: (errors, dispatch) => dispatch(focus('documentName', 'healthProviderName'))\n// })(connect(mapStateToProps)(DocumentEdit));\n","import {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../../../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const editDocument = (id, document) => dispatch => {\n\n  return fetch(`${API_BASE_URL}/documents/${id}`, {\n      method: 'PUT',\n      headers: {\n          'content-type': 'application/json'\n      },\n      body: JSON.stringify(document)\n  })\n      .then(res => normalizeResponseErrors(res))\n      .then(res => res.json())\n      .catch(err => {\n          const {reason, message, location} = err;\n          if (reason === 'ValidationError') {\n              // Convert ValidationErrors into SubmissionErrors for Redux Form\n              return Promise.reject(\n                  new SubmissionError({\n                      [location]: message\n                  })\n              );\n          }\n      });\n};  ","import React, { Component } from \"react\";\nimport '../../containers/dashboard/dashboard';\n\nclass Contact extends Component {\n  render() {\n    return (\n      <main>\n      <div>\n        <h2>CONTACT INFO</h2>\n        <p>Please email all questions to\n        our <a href=\"mailto:support@chronic-data.io\">support@chronic-data.io</a>.\n        </p>\n      </div>\n    </main>\n    );\n  }\n}\n\nexport default Contact;\n","import React from 'react';\nimport {Field, reduxForm, focus} from 'redux-form';\nimport {registerUser} from '../actions/users';\nimport {login} from '../actions/auth';\nimport Input from './input';\nimport {Button, Form} from 'semantic-ui-react';\nimport {required, nonEmpty, matches, length, isTrimmed} from '../../validators';\n\nconst passwordLength = length({min: 6, max: 72});\nconst matchesPassword = matches('password');\n\n\nexport class RegistrationForm extends React.Component {\n    onSubmit(values) {\n        const {username, password, firstName, lastName} = values;\n        const user = {username, password, firstName, lastName};\n        return this.props\n            .dispatch(registerUser(user))\n            .then(() => this.props.dispatch(login(username, password)));\n    }\n\n    render() {\n        return (\n            <Form\n                className=\"login-form\"\n                onSubmit={this.props.handleSubmit(values =>\n                    this.onSubmit(values)\n                )}>\n                <label htmlFor=\"firstName\">First name</label>\n                <Field component={Input} type=\"text\" name=\"firstName\" placeholder=\"First Name\"/>\n                <label htmlFor=\"lastName\">Last name</label>\n                <Field component={Input} type=\"text\" name=\"lastName\" />\n                <label htmlFor=\"username\">Username</label>\n                <Field\n                    component={Input}\n                    type=\"text\"\n                    name=\"username\"\n                    validate={[required, nonEmpty, isTrimmed]}\n                />\n                <label htmlFor=\"password\">Password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"password\"\n                    validate={[required, passwordLength, isTrimmed]}\n                />\n                <label htmlFor=\"passwordConfirm\">Confirm password</label>\n                <Field\n                    component={Input}\n                    type=\"password\"\n                    name=\"passwordConfirm\"\n                    validate={[required, nonEmpty, matchesPassword]}\n                />\n                <Button\n                    type=\"submit\"\n                    disabled={this.props.pristine || this.props.submitting}>\n                    Register\n                </Button>\n            </Form>\n        );\n    }\n}\n\nexport default reduxForm({\n    form: 'registration',\n    onSubmitFail: (errors, dispatch) =>\n        dispatch(focus('registration', Object.keys(errors)[0]))\n})(RegistrationForm);\n","import {SubmissionError} from 'redux-form';\n\nimport {API_BASE_URL} from '../../config';\nimport {normalizeResponseErrors} from './utils';\n\nexport const registerUser = user => dispatch => {\n    return fetch(`${API_BASE_URL}/users`, {\n        method: 'POST',\n        headers: {\n            'content-type': 'application/json'\n        },\n        body: JSON.stringify(user)\n    })\n        .then(res => normalizeResponseErrors(res))\n        .then(res => res.json())\n        .catch(err => {\n            const {reason, message, location} = err;\n            if (reason === 'ValidationError') {\n                // Convert ValidationErrors into SubmissionErrors for Redux Form\n                return Promise.reject(\n                    new SubmissionError({\n                        [location]: message\n                    })\n                );\n            }\n        });\n};\n","import React from 'react';\nimport {connect} from 'react-redux';\nimport {Link, Redirect} from 'react-router-dom';\n\nimport RegistrationForm from './registration-form';\n\nexport function RegistrationPage(props) {\n    // If we are logged in (which happens automatically when registration\n    // is successful) redirect to the user's dashboard\n    if (props.loggedIn) {\n        return <Redirect to=\"/dashboard\" />;\n    }\n    return (\n        <div className=\"home ui message\">\n            <h2>Register for Account</h2>\n            <RegistrationForm />\n            <Link to=\"/\">Login</Link>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n    loggedIn: state.auth.currentUser !== null\n});\n\nexport default connect(mapStateToProps)(RegistrationPage);\n","import React, { Component } from 'react';\n// import { Document, Page, pdfjs } from 'react-pdf/dist/entry.webpack';\nimport { Document, Page, pdfjs } from \"react-pdf\"; \nimport {AWS_BASE_URL} from '../../../config';\n\n\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\n\n \nclass PDFViewer extends Component {\n  \n  state = {\n    numPages: null,\n    pageNumber: 1,\n  }\n \n  onDocumentLoadSuccess = ({ numPages }) => {\n    this.setState({ numPages });\n  }\n \n  render() {\n    const { pageNumber, numPages } = this.state;\n    const imgUrl = {url:AWS_BASE_URL+this.props.match.params.id};\n    console.log(imgUrl);\n\n    return (\n      <div style={{ width: 600 }}>\n        <Document\n          file= {imgUrl}\n          // file= '/docs/examplePDF.pdf'\n          onLoadSuccess={this.onDocumentLoadSuccess}\n        >\n          <Page pageNumber={pageNumber} width={600}/>\n        </Document>\n        <p>Page {pageNumber} of {numPages} </p>\n      </div>\n    );\n  }\n}\n\n// const mapStateToProps = (state) =>{\n//   return {auth:state.auth, \n//     documents: state.documents}\n// }\n\n\n// export default withRouter(connect(mapStateToProps)(PDFViewer))\nexport default PDFViewer;","import React from 'react';\nimport {connect} from 'react-redux';\nimport { Route, Link, Switch, withRouter} from 'react-router-dom';\nimport HeaderBar from './components/common/header/header';\nimport LandingPage from './containers/landingpage/landing-page';\nimport Dashboard from './containers/dashboard/dashboard';\nimport DocumentsForm from './components/documents/components/document-form';\nimport Vitals from './components/vitals/vitals';\nimport DocumentList from './components/documentViewer/components/documentList';\nimport DocumentViewer from './components/documentViewer/components/documentViewer';\nimport DocumentEdit from './components/documents/components/document-edit'\nimport Contact from \"./containers/contact/contact\";\nimport RegistrationPage from './auth/components/registration-page';\nimport FileViewer from './components/documentViewer/components/fileViewer';\nimport PDFViewer from './components/documentViewer/components/pdfViewer';\nimport PDFViewerTest from './components/documentViewer/components/pdfViewerTest';\n\nimport {refreshAuthToken} from './auth/actions/auth';\n\nexport class App extends React.Component {\n    render() {\n        return (\n            <div className=\"app\">\n                <HeaderBar />\n                <main>\n                    <Switch>\n                    <Route exact path=\"/\" component={LandingPage}/>\n                    <Route exact path=\"/Dashboard\" component={Dashboard} />\n                    <Route path=\"/Dashboard/SubmitDocument\" component={DocumentsForm}/>\n                    <Route path=\"/Dashboard/Vitals\" component={Vitals}/>\n                    <Route path=\"/Dashboard/Documents\" component={DocumentList}/>\n                    <Route path=\"/Dashboard/Contact\" component={Contact}/>\n                    <Route path=\"/register\" component={RegistrationPage} />\n                    <Route path=\"/documents/edit/:id\" component={DocumentEdit} />\n                    <Route path=\"/documents/:id\" component={DocumentViewer} />\n                    <Route path=\"/image/:id\" component={PDFViewer} />\n                    <Route path=\"/pdf/:id\" component={PDFViewer} />\n                    {/* <SecureRoute path=\"/profile\" component={ProfilePage} /> */}\n                    </Switch>\n                </main>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    authToken: state.auth.authToken,\n    currentUser: state.auth.currentUser\n});\n\n// Deal with update blocking - https://reacttraining.com/react-router/web/guides/dealing-with-update-blocking\nexport default withRouter(connect(mapStateToProps)(App));\n\n// export default () => <div>the app</div>\n\n\n\n\n","import {\n    SET_AUTH_TOKEN,\n    CLEAR_AUTH,\n    AUTH_REQUEST,\n    AUTH_SUCCESS,\n    AUTH_ERROR\n} from '../actions/auth';\n\nconst initialState = {\n    authToken: null, // authToken !== null does not mean it has been validated\n    currentUser: null,\n    loading: false,\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    if (action.type === SET_AUTH_TOKEN) {\n        return Object.assign({}, state, {\n            authToken: action.authToken\n        });\n    } else if (action.type === CLEAR_AUTH) {\n        return Object.assign({}, state, {\n            authToken: null,\n            currentUser: null\n        });\n    } else if (action.type === AUTH_REQUEST) {\n        return Object.assign({}, state, {\n            loading: true,\n            error: null\n        });\n    } else if (action.type === AUTH_SUCCESS) {\n        return Object.assign({}, state, {\n            loading: false,\n            currentUser: action.currentUser\n        });\n    } else if (action.type === AUTH_ERROR) {\n        return Object.assign({}, state, {\n            loading: false,\n            error: action.error\n        });\n    }\n    return state;\n}\n","\n\nimport {\n  SET_DOCUMENTS,\n} from '../action/fetch-documents'\n\n\nconst initialState = [];\n\nexport default function reducer(state = initialState, action) {\n  if (action.type === SET_DOCUMENTS) {\n    return action.payload;\n  }  \n  // else if (action.type === SET_DOCUMENT){\n  //   return action.payload;\n  // }\n  return state;\n}\n","import {\n    FETCH_PROTECTED_DATA_SUCCESS,\n    FETCH_PROTECTED_DATA_ERROR\n} from '../actions/protected-data';\n\nconst initialState = {\n    data: '',\n    error: null\n};\n\nexport default function reducer(state = initialState, action) {\n    if (action.type === FETCH_PROTECTED_DATA_SUCCESS) {\n        return Object.assign({}, state, {\n            data: action.data,\n            error: null\n        });\n    } else if (action.type === FETCH_PROTECTED_DATA_ERROR) {\n        return Object.assign({}, state, {\n            error: action.error\n        });\n    }\n    return state;\n}\n","import {createStore, applyMiddleware, combineReducers, compose} from 'redux';\nimport {reducer as formReducer} from 'redux-form';\nimport thunk from 'redux-thunk';\nimport {loadAuthToken} from './local-storage';\nimport authReducer from './auth/reducers/auth';\nimport documentsReducer from './components/documentViewer/reducer/documentReducer';\nimport protectedDataReducer from './auth/reducers/protected-data';\nimport {setAuthToken, refreshAuthToken} from './auth/actions/auth';\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n    combineReducers({\n        form: formReducer,\n        auth: authReducer,\n        documents: documentsReducer,\n        protectedData: protectedDataReducer\n    }),\n    composeEnhancers(\n      applyMiddleware(thunk),\n    )\n\n);\n\n\n// Hydrate the authToken from localStorage if it exist\nconst authToken = loadAuthToken();\nif (authToken) {\n    const token = authToken;\n    store.dispatch(setAuthToken(token));\n    store.dispatch(refreshAuthToken());\n}\n\nexport default store;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport config from './config';\nimport App from './app';\nimport store from './store';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </Provider>\n  ,\n  document.getElementById('root')\n);\nregisterServiceWorker()\n"],"sourceRoot":""}